p2
p2 <- plot_ly(gen0.hsv.filtered, x = ~hum.name, y = ~normalized.area, type = "box", boxpoints="all", color=~as.factor(country),
colors = c("blue","darkorchid","darkorange","cyan","chartreuse","red","darkgreen","mediumspringgreen","magenta","navy","yellow","brown","palevioletred")) %>%
layout(title = "Chenopodium quinoa Seed Size",
margin = list(b = 160),
yaxis = list(title = "Mean Normalized Seed Size"),
xaxis = list(title = "Genotype", categoryarray=~hum.name,categoryorder="array"))
p2
p2 <- plot_ly(gen0.hsv.filtered, x = ~hum.name, y = ~normalized.area, type = "box", boxpoints="all", color=~as.factor(country),
colors = c("blue","darkorchid","navy","cyan","chartreuse","red","darkgreen","mediumspringgreen","brown","darkorange","yellow","magenta","palevioletred")) %>%
layout(title = "Chenopodium quinoa Seed Size",
margin = list(b = 160),
yaxis = list(title = "Mean Normalized Seed Size"),
xaxis = list(title = "Genotype", categoryarray=~hum.name,categoryorder="array"))
p2
p2 <- plot_ly(gen0.hsv.filtered, x = ~hum.name, y = ~normalized.area, type = "box", boxpoints="all", color=~as.factor(country),
colors = c("blue","magenta","navy","cyan","chartreuse","red","darkgreen","mediumspringgreen","brown","darkorange","yellow","darkorchid","palevioletred")) %>%
layout(title = "Chenopodium quinoa Seed Size",
margin = list(b = 160),
yaxis = list(title = "Mean Normalized Seed Size"),
xaxis = list(title = "Genotype", categoryarray=~hum.name,categoryorder="array"))
p2
p2 <- plot_ly(gen0.hsv.filtered, x = ~hum.name, y = ~normalized.area, type = "box", boxpoints="all", color=~as.factor(country),
colors = c("blue","magenta","navy","palevioletred","chartreuse","red","darkgreen","mediumspringgreen","brown","darkorange","yellow","darkorchid","cyan")) %>%
layout(title = "Chenopodium quinoa Seed Size",
margin = list(b = 160),
yaxis = list(title = "Mean Normalized Seed Size"),
xaxis = list(title = "Genotype", categoryarray=~hum.name,categoryorder="array"))
p2
p2 <- plot_ly(gen0.hsv.filtered, x = ~hum.name, y = ~normalized.area, type = "box", boxpoints="all", color=~as.factor(country),
colors = c("blue","magenta","navy","palevioletred","darkgreen","red","chartruese","mediumspringgreen","brown","darkorange","yellow","darkorchid","cyan")) %>%
layout(title = "Chenopodium quinoa Seed Size",
margin = list(b = 160),
yaxis = list(title = "Mean Normalized Seed Size"),
xaxis = list(title = "Genotype", categoryarray=~hum.name,categoryorder="array"))
p2
p2 <- plot_ly(gen0.hsv.filtered, x = ~hum.name, y = ~normalized.area, type = "box", boxpoints="all", color=~as.factor(country),
colors = c("blue","magenta","navy","palevioletred","darkgreen","red","chartreuse","mediumspringgreen","brown","darkorange","yellow","darkorchid","cyan")) %>%
layout(title = "Chenopodium quinoa Seed Size",
margin = list(b = 160),
yaxis = list(title = "Mean Normalized Seed Size"),
xaxis = list(title = "Genotype", categoryarray=~hum.name,categoryorder="array"))
p2
p1<- ggplot(gen0.hsv.filtered,aes(x=hum.name,y=normalized.area),color=as.factor(country))+
geom_boxplot()+
geom_jitter(width=0.2)
p1
gen0.hsv.filtered<-gen0.hsv.filtered[order(gen0.hsv.filtered$mean.norm.area),]
p1<- ggplot(gen0.hsv.filtered,aes(x=hum.name,y=normalized.area),color=as.factor(country),
colors = c("blue","magenta","navy","palevioletred","darkgreen","red","chartreuse","mediumspringgreen","brown","darkorange","yellow","darkorchid","cyan"))+
geom_boxplot()+
geom_jitter(width=0.2)+
theme_bw()
p1
gen0.levels<-names(gen0.hsv.filtered)[order(gen0.hsv.filtered$mean.norm.area)]
gen0.levels
p1<- ggplot(gen0.hsv.filtered,aes(x=hum.name,y=mean.norm.area),color=as.factor(country),
colors = c("blue","magenta","navy","palevioletred","darkgreen","red","chartreuse","mediumspringgreen","brown","darkorange","yellow","darkorchid","cyan"))+
geom_boxplot()+
geom_jitter(width=0.2)+
theme_bw()
p1
p2 <- plot_ly(gen0.hsv.filtered, x = ~hum.name, y = ~normalized.area, type = "box", boxpoints="all", color=~as.factor(country),
colors = c("blue","magenta","navy","palevioletred","darkgreen","red","chartreuse","mediumspringgreen","brown","darkorange","yellow","darkorchid","cyan")) %>%
layout(title = "Chenopodium quinoa Seed Size",
margin = list(b = 160),
yaxis = list(title = "Mean Normalized Seed Size"),
xaxis = list(title = "Genotype", categoryarray=~hum.name,categoryorder="array"))
p2
p<-plot_ly()%>%
add_markers(data=gen0_scores, x = ~PC1, y = ~PC2, z = ~PC3,
marker = list(symbol = 'circle'), showlegend=TRUE,
text = ~paste('Genotype:', hum.name,'<br>Harvest Day',normalized.area ,'<br>PC1:', PC1, '<br>PC2:', PC2,
'<br>PC3:', PC3))%>%
layout(title = 'Panicle Phenotype Principal Components',
scene = list(xaxis = list(title = 'PC1'),
yaxis = list(title = 'PC2'),
zaxis = list(title = 'PC3'),
height = 800, units="px"))
pca_format=function(data){
data_sub=subset(data, select=-c(generation,observation,plantbarcode,genotype,area,marker_area,normalized.area, hum.name,country))
return(data_sub)
}
pca_nonzero=function(data_sub){
col_sum=colSums(data_sub)
channel_data=data_sub[,col_sum!=0]
return(channel_data)
}
go_pca=function(channel_data){
channel_pca=prcomp(channel_data,center=TRUE, scale=TRUE)
}
hsv2=pca_format(gen0.hsv)
pca.gen0.1=pca_nonzero(hsv2)
gen0.pca.1=go_pca(pca.gen0.1)
summary(gen0.pca.1)
pov0.1 <- gen0.pca.1$sdev^2/sum(gen0.pca.1$sdev^2)
gen0_scores<-as.data.frame(gen0.pca.1$x)
gen0_scores$genotype=gen0.hsv$genotype
gen0_scores$plantbarcode=gen0.hsv$plantbarcode
gen0_scores$hum.name=gen0.hsv$hum.name
gen0_scores$norm_area=gen0.hsv$normalized.area
write.table(gen0_scores, file="gen0_seed_pca_scores.csv",quote=FALSE,sep=',')
write.table(gen0.pca.1$rotation, file="gen0_seed_pca_loading.csv",quote=FALSE,sep=',')
p<-plot_ly()%>%
add_markers(data=gen0_scores, x = ~PC1, y = ~PC2, z = ~PC3,
marker = list(symbol = 'circle'), showlegend=TRUE,
text = ~paste('Genotype:', hum.name,'<br>Harvest Day',normalized.area ,'<br>PC1:', PC1, '<br>PC2:', PC2,
'<br>PC3:', PC3))%>%
layout(title = 'Panicle Phenotype Principal Components',
scene = list(xaxis = list(title = 'PC1'),
yaxis = list(title = 'PC2'),
zaxis = list(title = 'PC3'),
height = 800, units="px"))
p
p<-plot_ly()%>%
add_markers(data=gen0_scores, x = ~PC1, y = ~PC2, z = ~PC3,
marker = list(symbol = 'circle'), showlegend=TRUE,
text = ~paste('Genotype:', hum.name,'<br>Harvest Day',norm_area ,'<br>PC1:', PC1, '<br>PC2:', PC2,
'<br>PC3:', PC3))%>%
layout(title = 'Panicle Phenotype Principal Components',
scene = list(xaxis = list(title = 'PC1'),
yaxis = list(title = 'PC2'),
zaxis = list(title = 'PC3'),
height = 800, units="px"))
p
p<-plot_ly()%>%
add_markers(data=gen0_scores, x = ~PC1, y = ~PC2, z = ~PC3, color=~as.factor(country)
marker = list(symbol = 'circle'), showlegend=TRUE,
text = ~paste('Genotype:', hum.name,'<br>Harvest Day',norm_area ,'<br>PC1:', PC1, '<br>PC2:', PC2,
'<br>PC3:', PC3))%>%
layout(title = 'Panicle Phenotype Principal Components',
scene = list(xaxis = list(title = 'PC1'),
yaxis = list(title = 'PC2'),
zaxis = list(title = 'PC3'),
height = 800, units="px"))
p
gen0_scores$country=gen0.hsv$country
p<-plot_ly()%>%
add_markers(data=gen0_scores, x = ~PC1, y = ~PC2, z = ~PC3, color=~as.factor(country)
marker = list(symbol = 'circle'), showlegend=TRUE,
text = ~paste('Genotype:', hum.name,'<br>Harvest Day',norm_area ,'<br>PC1:', PC1, '<br>PC2:', PC2,
'<br>PC3:', PC3))%>%
layout(title = 'Panicle Phenotype Principal Components',
scene = list(xaxis = list(title = 'PC1'),
yaxis = list(title = 'PC2'),
zaxis = list(title = 'PC3'),
height = 800, units="px"))
p<-plot_ly()%>%
add_markers(data=gen0_scores, x = ~PC1, y = ~PC2, z = ~PC3, color=~as.factor(country),
marker = list(symbol = 'circle'), showlegend=TRUE,
text = ~paste('Genotype:', hum.name,'<br>Harvest Day',norm_area ,'<br>PC1:', PC1, '<br>PC2:', PC2,
'<br>PC3:', PC3))%>%
layout(title = 'Panicle Phenotype Principal Components',
scene = list(xaxis = list(title = 'PC1'),
yaxis = list(title = 'PC2'),
zaxis = list(title = 'PC3'),
height = 800, units="px"))
p
p<-plot_ly()%>%
add_markers(data=gen0_scores, x = ~PC1, y = ~PC2, z = ~PC3, color=~as.factor(country),
colors = c("blue","magenta","navy","palevioletred","darkgreen","red","chartreuse","mediumspringgreen","brown","darkorange","yellow","darkorchid","cyan"),
marker = list(symbol = 'circle'), showlegend=TRUE,
text = ~paste('Genotype:', hum.name,'<br>Harvest Day',norm_area ,'<br>PC1:', PC1, '<br>PC2:', PC2,
'<br>PC3:', PC3))%>%
layout(title = 'Panicle Phenotype Principal Components',
scene = list(xaxis = list(title = 'PC1'),
yaxis = list(title = 'PC2'),
zaxis = list(title = 'PC3'),
height = 800, units="px"))
p
p<-plot_ly()%>%
add_markers(data=gen0_scores, x = ~PC1, y = ~PC2, z = ~PC3, color=~as.factor(country),
colors = c("blue","magenta","navy","palevioletred","darkgreen","red","chartreuse","mediumspringgreen","brown","darkorange","yellow","darkorchid","cyan"),
marker = list(symbol = 'circle'), showlegend=TRUE,
text = ~paste('Genotype:', hum.name,'<br>Harvest Day',norm_area ,'<br>Country:', country))%>%
layout(title = 'Panicle Phenotype Principal Components',
scene = list(xaxis = list(title = 'PC1'),
yaxis = list(title = 'PC2'),
zaxis = list(title = 'PC3'),
height = 800, units="px"))
p
pca_format=function(data){
data_sub=subset(data, select=-c(generation,genotype,area,marker_area,normalized.area, hum.name,country))
return(data_sub)
}
pca_nonzero=function(data_sub){
col_sum=colSums(data_sub)
channel_data=data_sub[,col_sum!=0]
return(channel_data)
}
go_pca=function(channel_data){
channel_pca=prcomp(channel_data,center=TRUE, scale=TRUE)
}
hsv1=pca_format(gen0.hsv.ag)
pca.gen0=pca_nonzero(hsv1)
gen0.pca=go_pca(pca.gen0)
summary(gen0.pca)
pov0 <- gen0.pca$sdev^2/sum(gen0.pca$sdev^2)
gen0_ag_scores<-as.data.frame(gen0.pca$x)
gen0_ag_scores$genotype=gen0.hsv.ag$genotype
gen0_ag_scores$hum.name=gen0.hsv.ag$hum.name
gen0_ag_scores$norm_area=gen0.hsv.ag$normalized.area
write.table(gen0_ag_scores, file="gen0_agg_seed_pca_scores.csv",quote=FALSE,sep=',')
write.table(gen0.pca$rotation, file="gen0_agg_seed_pca_loading.csv",quote=FALSE,sep=',')
p<-plot_ly()%>%
add_markers(data=gen0_ag_scores, x = ~PC1, y = ~PC2, z = ~PC3, color=~as.factor(country),
colors = c("blue","magenta","navy","palevioletred","darkgreen","red","chartreuse","mediumspringgreen","brown","darkorange","yellow","darkorchid","cyan"),
marker = list(symbol = 'circle'), showlegend=TRUE,
text = ~paste('Genotype:', hum.name,'<br>Harvest Day',norm_area ,'<br>Country:', country))%>%
layout(title = 'Panicle Phenotype Principal Components',
scene = list(xaxis = list(title = 'PC1'),
yaxis = list(title = 'PC2'),
zaxis = list(title = 'PC3'),
height = 800, units="px"))
p
gen0_ag_scores$country=gen0.hsv.ag$country
p<-plot_ly()%>%
add_markers(data=gen0_ag_scores, x = ~PC1, y = ~PC2, z = ~PC3, color=~as.factor(country),
colors = c("blue","magenta","navy","palevioletred","darkgreen","red","chartreuse","mediumspringgreen","brown","darkorange","yellow","darkorchid","cyan"),
marker = list(symbol = 'circle'), showlegend=TRUE,
text = ~paste('Genotype:', hum.name,'<br>Harvest Day',norm_area ,'<br>Country:', country))%>%
layout(title = 'Panicle Phenotype Principal Components',
scene = list(xaxis = list(title = 'PC1'),
yaxis = list(title = 'PC2'),
zaxis = list(title = 'PC3'),
height = 800, units="px"))
p
p<-plot_ly()%>%
add_markers(data=gen0_ag_scores, x = ~PC1, y = ~PC2, z = ~PC3, color=~as.factor(country),
colors = c("blue","magenta","navy","palevioletred","darkgreen","red","chartreuse","mediumspringgreen","brown","darkorange","yellow","darkorchid","cyan"),
marker = list(symbol = 'circle'), showlegend=TRUE,
text = ~paste('Genotype:', hum.name,'<br>Norm. Mean Area',norm_area ,'<br>Country:', country))%>%
layout(title = 'Panicle Phenotype Principal Components',
scene = list(xaxis = list(title = 'PC1'),
yaxis = list(title = 'PC2'),
zaxis = list(title = 'PC3'),
height = 800, units="px"))
p
library(shiny)
library(d3heatmap)
library(gplots)
library(reshape)
library(dplyr)
library(RColorBrewer)
library(ggplot2)
library(shinythemes)
library(shinyRGL)
library(scatterplot3d)
library(rgl)
setwd('/Users/mgehan/Documents/github/quinoa-shiny-2017/quinoa-trait/data')
######## genotype info #########
genotype.info<-read.csv(file="genotype.info.txt", sep="\t", header=TRUE, stringsAsFactors=FALSE)
geno<-colsplit(genotype.info$barcode,"\\.",names=c("genotype","generation"))
genotype.info<-cbind(genotype.info,geno)
genotype.info<-subset(genotype.info,select=c(genotype,hum.name,country))
########## gen0 ################
gen0<-read.csv(file="gen0.area.color.1.txt", sep="\t", header=TRUE, stringsAsFactors=FALSE)
gen0<-subset(gen0,select=c(plantbarcode,area,marker_area,channel_name,values))
gen0$normalized.area<-NA
gen0$normalized.area<-gen0$area/gen0$marker_area
genotype<-colsplit(gen0$plantbarcode,"\\.", names=c("genotype","generation"))
gen0<-cbind(gen0,genotype)
gen0.hue<-gen0[(gen0$channel_name=="hue"),]
gen0.hue<-subset(gen0.hue, select=-c(channel_name))
colnames(gen0.hue)<-c("plantbarcode","area","marker_area","hue","normalized.area","genotype","generation")
hnames <- paste("hue", 1:256, sep = "")
hue<-colsplit(gen0.hue$hue,",",names=hnames)
gen0.hue<-cbind(gen0.hue,hue)
gen0.hue<-subset(gen0.hue, select=-c(hue))
gen0.hue$observation <- 1:nrow(gen0.hue)
gen0.sat<-gen0[(gen0$channel_name=="saturation"),]
gen0.sat<-subset(gen0.sat, select=-c(channel_name))
colnames(gen0.sat)<-c("plantbarcode","area","marker_area","saturation","normalized.area","genotype","generation")
snames <- paste("sat", 1:256, sep = "")
sat<-colsplit(gen0.sat$saturation,",",names=snames)
gen0.sat<-cbind(gen0.sat,sat)
gen0.sat<-subset(gen0.sat, select=-c(saturation))
gen0.sat$observation <- 1:nrow(gen0.sat)
gen0.val<-gen0[(gen0$channel_name=="value"),]
gen0.val<-subset(gen0.val, select=-c(channel_name))
colnames(gen0.val)<-c("plantbarcode","area","marker_area","value","normalized.area","genotype","generation")
vnames <- paste("val", 1:256, sep = "")
val<-colsplit(gen0.val$value,",",names=vnames)
gen0.val<-cbind(gen0.val,val)
gen0.val<-subset(gen0.val, select=-c(value))
gen0.val$observation <- 1:nrow(gen0.val)
gen0.hs<-merge(gen0.hue,gen0.sat,by=c("observation","plantbarcode","genotype","generation","area","marker_area","normalized.area"))
gen0.hsv<-merge(gen0.hs,gen0.val,by=c("observation","plantbarcode","genotype","generation","area","marker_area","normalized.area"))
gen0.hsv.ag<-aggregate(gen0.hsv,by=list(gen0.hsv$genotype),FUN = mean)
gen0.hsv.sd<-aggregate(gen0.hsv,by=list(gen0.hsv$genotype),FUN = sd)
gen0.hsv.ag$genotype<-gen0.hsv.ag$Group.1
gen0.hsv.ag<-subset(gen0.hsv.ag,select=-c(Group.1, plantbarcode, observation))
gen0.hsv<-merge(gen0.hsv,genotype.info,by="genotype",all.x=TRUE)
gen0.hsv.ag<-merge(gen0.hsv.ag,genotype.info,by="genotype",all.x=TRUE)
mean.norm.area1<-subset(gen0.hsv.ag,select=c(genotype,normalized.area))
colnames(mean.norm.area1)<-c("genotype","mean.norm.area")
gen0.hsv<-merge(gen0.hsv,mean.norm.area1,by="genotype",all.x=TRUE)
sd.norm.area1<-subset(gen0.hsv.sd,select=c(Group.1,normalized.area))
colnames(sd.norm.area1)<-c("genotype","sd.norm.area")
gen0.hsv<-merge(gen0.hsv,sd.norm.area1,by="genotype",all.x=TRUE)
##### Filter Gen0 seed size for box plot by stdev #######
gen0.hsv.filtered<-gen0.hsv[((gen0.hsv$normalized.area<=((gen0.hsv$sd.norm.area*2)+gen0.hsv$mean.norm.area)) & (gen0.hsv$normalized.area>=(gen0.hsv$mean.norm.area-(gen0.hsv$sd.norm.area*2)))),]
gen0.hsv.ag.filtered<-aggregate(gen0.hsv.filtered,by=list(gen0.hsv.filtered$genotype),FUN = mean)
p2 <- plot_ly(gen0.hsv.filtered, x = ~hum.name, y = ~normalized.area, type = "box", boxpoints="all", color=~as.factor(country),
colors = c("blue","magenta","navy","palevioletred","darkgreen","red","chartreuse","mediumspringgreen","brown","darkorange","yellow","darkorchid","cyan")) %>%
layout(title = "Chenopodium quinoa Seed Size",
margin = list(b = 160),
yaxis = list(title = "Mean Normalized Seed Size"),
xaxis = list(title = "Genotype", categoryarray=~hum.name,categoryorder="array"))
write.table(gen0.hsv, file="gen0_seed_biomass_hsv.csv",quote=FALSE,sep=',')
write.table(gen0.hsv.ag, file="gen0_seed_aggregated.csv",quote=FALSE,sep=',')
write.table(gen0.hsv.filtered, file="gen0.filtered_seed_biomass_hsv.csv",quote=FALSE,sep=',')
write.table(gen0.hsv.ag.filtered, file="gen0.filtered_seed_aggregated.csv",quote=FALSE,sep=',')
pca_format=function(data){
data_sub=subset(data, select=-c(generation,genotype,area,marker_area,normalized.area, hum.name,country))
return(data_sub)
}
pca_nonzero=function(data_sub){
col_sum=colSums(data_sub)
channel_data=data_sub[,col_sum!=0]
return(channel_data)
}
go_pca=function(channel_data){
channel_pca=prcomp(channel_data,center=TRUE, scale=TRUE)
}
hsv1=pca_format(gen0.hsv.ag)
pca.gen0=pca_nonzero(hsv1)
gen0.pca=go_pca(pca.gen0)
summary(gen0.pca)
pov0 <- gen0.pca$sdev^2/sum(gen0.pca$sdev^2)
gen0_ag_scores<-as.data.frame(gen0.pca$x)
gen0_ag_scores$genotype=gen0.hsv.ag$genotype
gen0_ag_scores$hum.name=gen0.hsv.ag$hum.name
gen0_ag_scores$norm_area=gen0.hsv.ag$normalized.area
gen0_ag_scores$country=gen0.hsv.ag$country
write.table(gen0_ag_scores, file="gen0_agg_seed_pca_scores.csv",quote=FALSE,sep=',')
write.table(gen0.pca$rotation, file="gen0_agg_seed_pca_loading.csv",quote=FALSE,sep=',')
p<-plot_ly()%>%
add_markers(data=gen0_ag_scores, x = ~PC1, y = ~PC2, z = ~PC3, color=~as.factor(country),
colors = c("blue","magenta","navy","palevioletred","darkgreen","red","chartreuse","mediumspringgreen","brown","darkorange","yellow","darkorchid","cyan"),
marker = list(symbol = 'circle'), showlegend=TRUE,
text = ~paste('Genotype:', hum.name,'<br>Norm. Mean Area',norm_area ,'<br>Country:', country))%>%
layout(title = 'Panicle Phenotype Principal Components',
scene = list(xaxis = list(title = 'PC1'),
yaxis = list(title = 'PC2'),
zaxis = list(title = 'PC3'),
height = 800, units="px"))
pca_format=function(data){
data_sub=subset(data, select=-c(generation,observation,plantbarcode,genotype,area,marker_area,normalized.area, hum.name,country))
return(data_sub)
}
pca_nonzero=function(data_sub){
col_sum=colSums(data_sub)
channel_data=data_sub[,col_sum!=0]
return(channel_data)
}
go_pca=function(channel_data){
channel_pca=prcomp(channel_data,center=TRUE, scale=TRUE)
}
hsv2=pca_format(gen0.hsv)
pca.gen0.1=pca_nonzero(hsv2)
gen0.pca.1=go_pca(pca.gen0.1)
summary(gen0.pca.1)
pov0.1 <- gen0.pca.1$sdev^2/sum(gen0.pca.1$sdev^2)
gen0_scores<-as.data.frame(gen0.pca.1$x)
gen0_scores$genotype=gen0.hsv$genotype
gen0_scores$plantbarcode=gen0.hsv$plantbarcode
gen0_scores$hum.name=gen0.hsv$hum.name
gen0_scores$norm_area=gen0.hsv$normalized.area
gen0_scores$country=gen0.hsv$country
write.table(gen0_scores, file="gen0_seed_pca_scores.csv",quote=FALSE,sep=',')
write.table(gen0.pca.1$rotation, file="gen0_seed_pca_loading.csv",quote=FALSE,sep=',')
p1<-plot_ly()%>%
add_markers(data=gen0_scores, x = ~PC1, y = ~PC2, z = ~PC3, color=~as.factor(country),
colors = c("blue","magenta","navy","palevioletred","darkgreen","red","chartreuse","mediumspringgreen","brown","darkorange","yellow","darkorchid","cyan"),
marker = list(symbol = 'circle'), showlegend=TRUE,
text = ~paste('Genotype:', hum.name,'<br>Norm. Mean Area',norm_area ,'<br>Country:', country))%>%
layout(title = 'Panicle Phenotype Principal Components',
scene = list(xaxis = list(title = 'PC1'),
yaxis = list(title = 'PC2'),
zaxis = list(title = 'PC3'),
height = 800, units="px"))
p
p1
p2
gen0.hsv.filtered<-gen0.hsv.filtered[order(gen0.hsv.filtered$mean.norm.area)]
gen0.hsv.filtered<-gen0.hsv.filtered[order(gen0.hsv.filtered$mean.norm.area),]
p2 <- plot_ly(gen0.hsv.filtered, x = ~hum.name, y = ~normalized.area, type = "box", boxpoints="all", color=~as.factor(country),
colors = c("blue","magenta","navy","palevioletred","darkgreen","red","chartreuse","mediumspringgreen","brown","darkorange","yellow","darkorchid","cyan")) %>%
layout(title = "Chenopodium quinoa Seed Size",
margin = list(b = 160),
yaxis = list(title = "Mean Normalized Seed Size"),
xaxis = list(title = "Genotype", categoryarray=~hum.name,categoryorder="array"))
p2
saveRDS(gen0_ag_scores,"gen0_agg_seed_pca_scores.rds")
saveRDS(gen0.hsv.filtered,"gen0.filtered_seed_biomass_hsv.rds")
runApp('~/Documents/github/quinoa-shiny-2017/quinoa-trait/quinoa_app.R')
runApp('~/Documents/github/quinoa-shiny-2017/quinoa-trait/quinoa_app.R')
runApp('~/Documents/github/quinoa-shiny-2017/quinoa-trait/quinoa_app.R')
View(gen0.hsv.ag.filtered)
View(gen0.hsv.filtered)
runApp('~/Documents/github/quinoa-shiny-2017/quinoa-trait/quinoa_app.R')
head(gen0.hsv.filtered)
runApp('~/Documents/github/quinoa-shiny-2017/quinoa-trait/quinoa_app.R')
runApp('~/Documents/github/quinoa-shiny-2017/quinoa-trait/quinoa_app.R')
runApp('~/Documents/github/quinoa-shiny-2017/quinoa-trait/quinoa_app.R')
runApp('~/Documents/github/quinoa-shiny-2017/quinoa-trait/quinoa_app.R')
library(shiny)
library(d3heatmap)
library(gplots)
library(reshape)
library(dplyr)
library(RColorBrewer)
library(ggplot2)
library(shinythemes)
library(shinyRGL)
library(scatterplot3d)
library(rgl)
setwd('/Users/mgehan/Documents/github/quinoa-shiny-2017/quinoa-trait/data')
######## genotype info #########
genotype.info<-read.csv(file="genotype.info.txt", sep="\t", header=TRUE, stringsAsFactors=FALSE)
geno<-colsplit(genotype.info$barcode,"\\.",names=c("genotype","generation"))
genotype.info<-cbind(genotype.info,geno)
genotype.info<-subset(genotype.info,select=c(genotype,hum.name,country))
########## gen0 ################
gen0<-read.csv(file="gen0.area.color.1.txt", sep="\t", header=TRUE, stringsAsFactors=FALSE)
gen0<-subset(gen0,select=c(plantbarcode,area,marker_area,channel_name,values))
gen0$normalized.area<-NA
gen0$normalized.area<-gen0$area/gen0$marker_area
genotype<-colsplit(gen0$plantbarcode,"\\.", names=c("genotype","generation"))
gen0<-cbind(gen0,genotype)
gen0.hue<-gen0[(gen0$channel_name=="hue"),]
gen0.hue<-subset(gen0.hue, select=-c(channel_name))
colnames(gen0.hue)<-c("plantbarcode","area","marker_area","hue","normalized.area","genotype","generation")
hnames <- paste("hue", 1:256, sep = "")
hue<-colsplit(gen0.hue$hue,",",names=hnames)
gen0.hue<-cbind(gen0.hue,hue)
gen0.hue<-subset(gen0.hue, select=-c(hue))
gen0.hue$observation <- 1:nrow(gen0.hue)
gen0.sat<-gen0[(gen0$channel_name=="saturation"),]
gen0.sat<-subset(gen0.sat, select=-c(channel_name))
colnames(gen0.sat)<-c("plantbarcode","area","marker_area","saturation","normalized.area","genotype","generation")
snames <- paste("sat", 1:256, sep = "")
sat<-colsplit(gen0.sat$saturation,",",names=snames)
gen0.sat<-cbind(gen0.sat,sat)
gen0.sat<-subset(gen0.sat, select=-c(saturation))
gen0.sat$observation <- 1:nrow(gen0.sat)
gen0.val<-gen0[(gen0$channel_name=="value"),]
gen0.val<-subset(gen0.val, select=-c(channel_name))
colnames(gen0.val)<-c("plantbarcode","area","marker_area","value","normalized.area","genotype","generation")
vnames <- paste("val", 1:256, sep = "")
val<-colsplit(gen0.val$value,",",names=vnames)
gen0.val<-cbind(gen0.val,val)
gen0.val<-subset(gen0.val, select=-c(value))
gen0.val$observation <- 1:nrow(gen0.val)
gen0.hs<-merge(gen0.hue,gen0.sat,by=c("observation","plantbarcode","genotype","generation","area","marker_area","normalized.area"))
gen0.hsv<-merge(gen0.hs,gen0.val,by=c("observation","plantbarcode","genotype","generation","area","marker_area","normalized.area"))
gen0.hsv.ag<-aggregate(gen0.hsv,by=list(gen0.hsv$genotype),FUN = mean)
gen0.hsv.sd<-aggregate(gen0.hsv,by=list(gen0.hsv$genotype),FUN = sd)
gen0.hsv.ag$genotype<-gen0.hsv.ag$Group.1
gen0.hsv.ag<-subset(gen0.hsv.ag,select=-c(Group.1, plantbarcode, observation))
gen0.hsv<-merge(gen0.hsv,genotype.info,by="genotype",all.x=TRUE)
gen0.hsv.ag<-merge(gen0.hsv.ag,genotype.info,by="genotype",all.x=TRUE)
mean.norm.area1<-subset(gen0.hsv.ag,select=c(genotype,normalized.area))
colnames(mean.norm.area1)<-c("genotype","mean.norm.area")
gen0.hsv<-merge(gen0.hsv,mean.norm.area1,by="genotype",all.x=TRUE)
sd.norm.area1<-subset(gen0.hsv.sd,select=c(Group.1,normalized.area))
colnames(sd.norm.area1)<-c("genotype","sd.norm.area")
gen0.hsv<-merge(gen0.hsv,sd.norm.area1,by="genotype",all.x=TRUE)
##### Filter Gen0 seed size for box plot by stdev #######
gen0.hsv.filtered<-gen0.hsv[((gen0.hsv$normalized.area<=((gen0.hsv$sd.norm.area*2)+gen0.hsv$mean.norm.area)) & (gen0.hsv$normalized.area>=(gen0.hsv$mean.norm.area-(gen0.hsv$sd.norm.area*2)))),]
gen0.hsv.ag.filtered<-aggregate(gen0.hsv.filtered,by=list(gen0.hsv.filtered$genotype),FUN = mean)
gen0.hsv.filtered<-gen0.hsv.filtered[order(gen0.hsv.filtered$mean.norm.area),]
p2 <- plot_ly(gen0.hsv.filtered, x = ~hum.name, y = ~normalized.area, type = "box", boxpoints="all", color=~as.factor(country),
colors = c("blue","magenta","navy","palevioletred","darkgreen","red","chartreuse","mediumspringgreen","brown","darkorange","yellow","darkorchid","cyan")) %>%
layout(title = "Chenopodium quinoa Seed Size",
margin = list(b = 160),
yaxis = list(title = "Mean Normalized Seed Size"),
xaxis = list(title = "Genotype", categoryarray=~hum.name,categoryorder="array"))
saveRDS(gen0.hsv.filtered,"gen0.filtered_seed_biomass_hsv.rds")
write.table(gen0.hsv, file="gen0_seed_biomass_hsv.csv",quote=FALSE,sep=',')
write.table(gen0.hsv.ag, file="gen0_seed_aggregated.csv",quote=FALSE,sep=',')
write.table(gen0.hsv.filtered, file="gen0.filtered_seed_biomass_hsv.csv",quote=FALSE,sep=',')
write.table(gen0.hsv.ag.filtered, file="gen0.filtered_seed_aggregated.csv",quote=FALSE,sep=',')
pca_format=function(data){
data_sub=subset(data, select=-c(generation,genotype,area,marker_area,normalized.area, hum.name,country))
return(data_sub)
}
pca_nonzero=function(data_sub){
col_sum=colSums(data_sub)
channel_data=data_sub[,col_sum!=0]
return(channel_data)
}
go_pca=function(channel_data){
channel_pca=prcomp(channel_data,center=TRUE, scale=TRUE)
}
hsv1=pca_format(gen0.hsv.ag)
pca.gen0=pca_nonzero(hsv1)
gen0.pca=go_pca(pca.gen0)
summary(gen0.pca)
pov0 <- gen0.pca$sdev^2/sum(gen0.pca$sdev^2)
gen0_ag_scores<-as.data.frame(gen0.pca$x)
gen0_ag_scores$genotype=gen0.hsv.ag$genotype
gen0_ag_scores$hum.name=gen0.hsv.ag$hum.name
gen0_ag_scores$norm_area=gen0.hsv.ag$normalized.area
gen0_ag_scores$country=gen0.hsv.ag$country
write.table(gen0_ag_scores, file="gen0_agg_seed_pca_scores.csv",quote=FALSE,sep=',')
write.table(gen0.pca$rotation, file="gen0_agg_seed_pca_loading.csv",quote=FALSE,sep=',')
saveRDS(gen0_ag_scores,"gen0_agg_seed_pca_scores.rds")
runApp('~/Documents/github/quinoa-shiny-2017/quinoa-trait/quinoa_app.R')
saveRDS(gen0_ag_scores,"gen0_agg_seed_pca_scores.rds", ascii = TRUE)
runApp('~/Documents/github/quinoa-shiny-2017/quinoa-trait/quinoa_app.R')
