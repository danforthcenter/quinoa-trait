gen1.hue$observation <- 1:nrow(gen1.hue)
library(shiny)
library(d3heatmap)
library(gplots)
library(reshape)
library(dplyr)
library(RColorBrewer)
library(ggplot2)
library(shinythemes)
library(shinyRGL)
library(scatterplot3d)
library(rgl)
setwd('/Users/mgehan/Documents/github/quinoa-shiny-2017/data-prep/')
######## genotype info #########
genotype.info<-read.csv(file="genotype.info.txt", sep="\t", header=TRUE, stringsAsFactors=FALSE)
geno<-colsplit(genotype.info$barcode,"\\.",names=c("genotype","generation"))
genotype.info<-cbind(genotype.info,geno)
genotype.info<-subset(genotype.info,select=c(genotype,hum.name,country))
gen1.3.21<-read.csv(file="gen1.3-21-17.txt", sep="\t", header=TRUE, stringsAsFactors=FALSE)
gen1.4.2<-read.csv(file="gen1.4-2-17.txt", sep="\t", header=TRUE, stringsAsFactors=FALSE)
gen1.4.4<-read.csv(file="gen1.4-4-17.txt", sep="\t", header=TRUE, stringsAsFactors=FALSE)
gen1.4.5<-read.csv(file="gen1.4-5-17.txt", sep="\t", header=TRUE, stringsAsFactors=FALSE)
gen1<-rbind(gen1.3.21,gen1.4.2)
gen1<-rbind(gen1,gen1.4.4)
gen1<-rbind(gen1,gen1.4.5)
gen1<-subset(gen1,select=c(plantbarcode,area,marker_area,channel_name,values))
gen1$normalized.area<-NA
gen1$normalized.area<-gen1$area/gen1$marker_area
genotype1<-colsplit(gen1$plantbarcode,"\\.", names=c("genotype","generation"))
gen1<-cbind(gen1,genotype1)
replicate<-colsplit(gen1$generation,"-", names=c("generation","replicate"))
gen1$replicate<-paste(replicate$replicate,replicate$NA., sep="")
gen1$generation<-replicate$generation
gen1.hue<-gen1[(gen1$channel_name=="hue"),]
gen1.hue<-subset(gen1.hue, select=-c(channel_name))
colnames(gen1.hue)<-c("plantbarcode","area","marker_area","hue","normalized.area","genotype","generation","replicate")
hnames <- paste("hue", 1:256, sep = "")
hue<-colsplit(gen1.hue$hue,",",names=hnames)
gen1.hue<-cbind(gen1.hue,hue)
gen1.hue<-subset(gen1.hue, select=-c(hue))
gen1.hue$observation <- 1:nrow(gen1.hue)
gen1.sat<-gen1[(gen1$channel_name=="saturation"),]
gen1.sat<-subset(gen1.sat, select=-c(channel_name))
colnames(gen1.sat)<-c("plantbarcode","area","marker_area","saturation","normalized.area","genotype","generation","replicate")
snames <- paste("sat", 1:256, sep = "")
sat<-colsplit(gen1.sat$saturation,",",names=snames)
gen1.sat<-cbind(gen1.sat,sat)
gen1.sat<-subset(gen1.sat, select=-c(saturation))
gen1.sat$observation <- 1:nrow(gen1.sat)
gen1.val<-gen1[(gen1$channel_name=="value"),]
gen1.val<-subset(gen1.val, select=-c(channel_name))
colnames(gen1.val)<-c("plantbarcode","area","marker_area","value","normalized.area","genotype","generation","replicate")
vnames <- paste("val", 1:256, sep = "")
val<-colsplit(gen1.val$value,",",names=vnames)
gen1.val<-cbind(gen1.val,val)
gen1.val<-subset(gen1.val, select=-c(value))
gen1.val$observation <- 1:nrow(gen1.val)
gen1.hs<-merge(gen1.hue,gen1.sat,by=c("observation","plantbarcode","genotype","generation","replicate","area","marker_area","normalized.area"))
gen1.hsv<-merge(gen1.hs,gen1.val,by=c("observation","plantbarcode","genotype","generation","replicate","area","marker_area","normalized.area"))
gen1.hsv.ag<-aggregate(gen1.hsv,by=list(gen1.hsv$plantbarcode,gen1.hsv$genotype, gen1.hsv$replicate), FUN =mean)
gen1.hsv.ag$plantbarcode<-gen1.hsv.ag$Group.1
gen1.hsv.ag$genotype<-gen1.hsv.ag$Group.2
gen1.hsv.ag$replicate<-gen1.hsv.ag$Group.3
gen1.hsv.ag<-subset(gen1.hsv.ag,select=-c(observation,Group.1, Group.2, Group.3))
mean.norm.area<-subset(gen1.hsv.ag, select=c(plantbarcode,normalized.area))
colnames(mean.norm.area)<-c("plantbarcode","mean.norm.area")
gen1.hsv.sd<-aggregate(gen1.hsv,by=list(gen1.hsv$plantbarcode),FUN = sd)
mean.norm.sd<-subset(gen1.hsv.sd,select=c(Group.1,normalized.area))
colnames(mean.norm.sd)<-c("plantbarcode","mean.norm.sd")
gen1.hsv<-merge(gen1.hsv,mean.norm.area,by="plantbarcode",all.x=TRUE)
gen1.hsv<-merge(gen1.hsv,mean.norm.sd,by="plantbarcode",all.x=TRUE)
gen1.hsv.filtered<-gen1.hsv[((gen1.hsv$normalized.area<=(gen1.hsv$mean.norm.sd+gen1.hsv$mean.norm.area)) & (gen1.hsv$normalized.area>=(gen1.hsv$mean.norm.area-gen1.hsv$mean.norm.sd))),]
gen1.hsv.ag.filtered<-aggregate(gen1.hsv.filtered,by=list(gen1.hsv.filtered$genotype),FUN = mean)
gen1.hsv.genoag<-aggregate(gen1.hsv,by=list(gen1.hsv$genotype), FUN =mean)
gen1.hsv.genoag$genotype<-gen1.hsv.genoag$Group.1
gen1.hsv.genoag<-subset(gen1.hsv.genoag,select=-c(observation,Group.1, plantbarcode,replicate))
genotype.info$genotype<-tolower(genotype.info$genotype)
gen1.hsv<-merge(gen1.hsv,genotype.info,by="genotype",all.x=TRUE)
gen1.hsv.ag<-merge(gen1.hsv.ag,genotype.info,by="genotype",all.x=TRUE)
gen1.hsv.genoag<-merge(gen1.hsv.genoag,genotype.info,by="genotype",all.x=TRUE)
gen0.hsv.ag$genotype<-tolower(gen0.hsv.ag$genotype)
gen0.gen1.seed<-merge(gen0.hsv.ag,gen1.hsv.genoag,by="genotype",all.y=TRUE,all.x=FALSE)
gen0.compare<-gen0.gen1.seed[,grep("*\\.x",colnames(gen0.gen1.seed))]
gen0.genotype<-gen0.gen1.seed$genotype
gen0.compare<-cbind(gen0.genotype,gen0.compare)
gen1.compare<-gen0.gen1.seed[,grep("*\\.y",colnames(gen0.gen1.seed))]
gen1.genotype<-gen0.gen1.seed$genotype
gen1.compare<-cbind(gen1.genotype,gen1.compare)
colnames(gen1.compare)<-c(colnames(gen0.compare))
gen0.gen1.compare<-rbind(gen0.compare,gen1.compare)
gen0<-read.csv(file="gen0.area.color.1.txt", sep="\t", header=TRUE, stringsAsFactors=FALSE)
gen0<-subset(gen0,select=c(plantbarcode,area,marker_area,channel_name,values))
gen0$normalized.area<-NA
gen0$normalized.area<-gen0$area/gen0$marker_area
genotype<-colsplit(gen0$plantbarcode,"\\.", names=c("genotype","generation"))
gen0<-cbind(gen0,genotype)
gen0.hue<-gen0[(gen0$channel_name=="hue"),]
gen0.hue<-subset(gen0.hue, select=-c(channel_name))
colnames(gen0.hue)<-c("plantbarcode","area","marker_area","hue","normalized.area","genotype","generation")
hnames <- paste("hue", 1:256, sep = "")
hue<-colsplit(gen0.hue$hue,",",names=hnames)
gen0.hue<-cbind(gen0.hue,hue)
gen0.hue<-subset(gen0.hue, select=-c(hue))
gen0.hue$observation <- 1:nrow(gen0.hue)
gen0.sat<-gen0[(gen0$channel_name=="saturation"),]
gen0.sat<-subset(gen0.sat, select=-c(channel_name))
colnames(gen0.sat)<-c("plantbarcode","area","marker_area","saturation","normalized.area","genotype","generation")
snames <- paste("sat", 1:256, sep = "")
sat<-colsplit(gen0.sat$saturation,",",names=snames)
gen0.sat<-cbind(gen0.sat,sat)
gen0.sat<-subset(gen0.sat, select=-c(saturation))
gen0.sat$observation <- 1:nrow(gen0.sat)
gen0.val<-gen0[(gen0$channel_name=="value"),]
gen0.val<-subset(gen0.val, select=-c(channel_name))
colnames(gen0.val)<-c("plantbarcode","area","marker_area","value","normalized.area","genotype","generation")
vnames <- paste("val", 1:256, sep = "")
val<-colsplit(gen0.val$value,",",names=vnames)
gen0.val<-cbind(gen0.val,val)
gen0.val<-subset(gen0.val, select=-c(value))
gen0.val$observation <- 1:nrow(gen0.val)
gen0.hs<-merge(gen0.hue,gen0.sat,by=c("observation","plantbarcode","genotype","generation","area","marker_area","normalized.area"))
gen0.hsv<-merge(gen0.hs,gen0.val,by=c("observation","plantbarcode","genotype","generation","area","marker_area","normalized.area"))
gen0.hsv.ag<-aggregate(gen0.hsv,by=list(gen0.hsv$genotype),FUN = mean)
gen0.hsv.sd<-aggregate(gen0.hsv,by=list(gen0.hsv$genotype),FUN = sd)
gen0.hsv.ag$genotype<-gen0.hsv.ag$Group.1
gen0.hsv.ag<-subset(gen0.hsv.ag,select=-c(Group.1, plantbarcode, observation))
gen0.hsv<-merge(gen0.hsv,genotype.info,by="genotype",all.x=TRUE)
gen0.hsv.ag<-merge(gen0.hsv.ag,genotype.info,by="genotype",all.x=TRUE)
mean.norm.area1<-subset(gen0.hsv.ag,select=c(genotype,normalized.area))
colnames(mean.norm.area1)<-c("genotype","mean.norm.area")
gen0.hsv<-merge(gen0.hsv,mean.norm.area1,by="genotype",all.x=TRUE)
sd.norm.area1<-subset(gen0.hsv.sd,select=c(Group.1,normalized.area))
colnames(sd.norm.area1)<-c("genotype","sd.norm.area")
gen0.hsv<-merge(gen0.hsv,sd.norm.area1,by="genotype",all.x=TRUE)
##### Filter Gen0 seed size for box plot by stdev #######
gen0.hsv.filtered<-gen0.hsv[((gen0.hsv$normalized.area<=((gen0.hsv$sd.norm.area*2)+gen0.hsv$mean.norm.area)) & (gen0.hsv$normalized.area>=(gen0.hsv$mean.norm.area-(gen0.hsv$sd.norm.area*2)))),]
gen0.hsv.ag.filtered<-aggregate(gen0.hsv.filtered,by=list(gen0.hsv.filtered$genotype),FUN = mean)
gen0.hsv.filtered<-gen0.hsv.filtered[order(gen0.hsv.filtered$mean.norm.area),]
p2 <- plot_ly(gen0.hsv.filtered, x = ~hum.name, y = ~normalized.area, type = "box", boxpoints="all", color=~as.factor(country),
colors = c("blue","magenta","navy","palevioletred","darkgreen","red","chartreuse","mediumspringgreen","brown","darkorange","yellow","darkorchid","cyan")) %>%
layout(title = "Chenopodium quinoa Seed Size",
margin = list(b = 160),
yaxis = list(title = "Mean Normalized Seed Size"),
xaxis = list(title = "Genotype", categoryarray=~hum.name,categoryorder="array"))
saveRDS(gen0.hsv.filtered,"gen0.filtered_seed_biomass_hsv.rds")
write.table(gen0.hsv, file="gen0_seed_biomass_hsv.csv",quote=FALSE,sep=',')
write.table(gen0.hsv.ag, file="gen0_seed_aggregated.csv",quote=FALSE,sep=',')
write.table(gen0.hsv.filtered, file="gen0.filtered_seed_biomass_hsv.csv",quote=FALSE,sep=',')
write.table(gen0.hsv.ag.filtered, file="gen0.filtered_seed_aggregated.csv",quote=FALSE,sep=',')
pca_format=function(data){
data_sub=subset(data, select=-c(generation,genotype,area,marker_area,normalized.area, hum.name,country))
return(data_sub)
}
pca_nonzero=function(data_sub){
col_sum=colSums(data_sub)
channel_data=data_sub[,col_sum!=0]
return(channel_data)
}
go_pca=function(channel_data){
channel_pca=prcomp(channel_data,center=TRUE, scale=TRUE)
}
hsv1=pca_format(gen0.hsv.ag)
pca.gen0=pca_nonzero(hsv1)
gen0.pca=go_pca(pca.gen0)
summary(gen0.pca)
pov0 <- gen0.pca$sdev^2/sum(gen0.pca$sdev^2)
gen0_ag_scores<-as.data.frame(gen0.pca$x)
gen0_ag_scores$genotype=gen0.hsv.ag$genotype
gen0_ag_scores$hum.name=gen0.hsv.ag$hum.name
gen0_ag_scores$norm_area=gen0.hsv.ag$normalized.area
gen0_ag_scores$country=gen0.hsv.ag$country
write.table(gen0_ag_scores, file="gen0_agg_seed_pca_scores.csv",quote=FALSE,sep=',')
write.table(gen0.pca$rotation, file="gen0_agg_seed_pca_loading.csv",quote=FALSE,sep=',')
saveRDS(gen0_ag_scores,"gen0_agg_seed_pca_scores.rds")
p<-plot_ly()%>%
add_markers(data=gen0_ag_scores, x = ~PC1, y = ~PC2, z = ~PC3, color=~as.factor(country),
colors = c("blue","magenta","navy","palevioletred","darkgreen","red","chartreuse","mediumspringgreen","brown","darkorange","yellow","darkorchid","cyan"),
marker = list(symbol = 'circle'), showlegend=TRUE,
text = ~paste('Genotype:', hum.name,'<br>Norm. Mean Area',norm_area ,'<br>Country:', country))%>%
layout(title = 'Panicle Phenotype Principal Components',
scene = list(xaxis = list(title = 'PC1'),
yaxis = list(title = 'PC2'),
zaxis = list(title = 'PC3'),
height = 800, units="px"))
pca_format=function(data){
data_sub=subset(data, select=-c(generation,observation,plantbarcode,genotype,area,marker_area,normalized.area, hum.name,country))
return(data_sub)
}
pca_nonzero=function(data_sub){
col_sum=colSums(data_sub)
channel_data=data_sub[,col_sum!=0]
return(channel_data)
}
go_pca=function(channel_data){
channel_pca=prcomp(channel_data,center=TRUE, scale=TRUE)
}
hsv2=pca_format(gen0.hsv)
pca.gen0.1=pca_nonzero(hsv2)
gen0.pca.1=go_pca(pca.gen0.1)
summary(gen0.pca.1)
pov0.1 <- gen0.pca.1$sdev^2/sum(gen0.pca.1$sdev^2)
gen0_scores<-as.data.frame(gen0.pca.1$x)
gen0_scores$genotype=gen0.hsv$genotype
gen0_scores$plantbarcode=gen0.hsv$plantbarcode
gen0_scores$hum.name=gen0.hsv$hum.name
gen0_scores$norm_area=gen0.hsv$normalized.area
gen0_scores$country=gen0.hsv$country
write.table(gen0_scores, file="gen0_seed_pca_scores.csv",quote=FALSE,sep=',')
write.table(gen0.pca.1$rotation, file="gen0_seed_pca_loading.csv",quote=FALSE,sep=',')
p1<-plot_ly()%>%
add_markers(data=gen0_scores, x = ~PC1, y = ~PC2, z = ~PC3, color=~as.factor(country),
colors = c("blue","magenta","navy","palevioletred","darkgreen","red","chartreuse","mediumspringgreen","brown","darkorange","yellow","darkorchid","cyan"),
marker = list(symbol = 'circle'), showlegend=TRUE,
text = ~paste('Genotype:', hum.name,'<br>Norm. Mean Area',norm_area ,'<br>Country:', country))%>%
layout(title = 'Panicle Phenotype Principal Components',
scene = list(xaxis = list(title = 'PC1'),
yaxis = list(title = 'PC2'),
zaxis = list(title = 'PC3'),
height = 800, units="px"))
gen0.hsv.ag$genotype<-tolower(gen0.hsv.ag$genotype)
gen0.gen1.seed<-merge(gen0.hsv.ag,gen1.hsv.genoag,by="genotype",all.y=TRUE,all.x=FALSE)
gen0.compare<-gen0.gen1.seed[,grep("*\\.x",colnames(gen0.gen1.seed))]
gen0.genotype<-gen0.gen1.seed$genotype
gen0.compare<-cbind(gen0.genotype,gen0.compare)
gen1.compare<-gen0.gen1.seed[,grep("*\\.y",colnames(gen0.gen1.seed))]
gen1.genotype<-gen0.gen1.seed$genotype
gen1.compare<-cbind(gen1.genotype,gen1.compare)
colnames(gen1.compare)<-c(colnames(gen0.compare))
gen0.gen1.compare<-rbind(gen0.compare,gen1.compare)
write.table(gen1.hsv, file="gen1_seed_biomass_hsv.csv",quote=FALSE,sep=',')
write.table(gen1.hsv.ag, file="gen1_seed_aggregated.csv",quote=FALSE,sep=',')
write.table(gen1.hsv.genoag, file="gen1_seed_aggregated_genotype.csv",quote=FALSE,sep=',')
write.table(gen0.gen1.seed, file="gen0_gen1_seed_data.csv",quote=FALSE,sep=',')
write.table(gen0.gen1.compare, file="gen0_gen1_all_data.csv",quote=FALSE,sep=',')
View(gen1.hsv.filtered)
p4 <- plot_ly(gen1.hsv.filtered, x = ~hum.name, y = ~normalized.area, type = "box", boxpoints="all", color=~as.factor(country),
colors = c("blue","magenta","navy","palevioletred","darkgreen","red","chartreuse","mediumspringgreen","brown","darkorange","yellow","darkorchid","cyan")) %>%
layout(title = "Chenopodium quinoa Seed Size",
margin = list(b = 160),
yaxis = list(title = "Mean Normalized Seed Size"),
xaxis = list(title = "Genotype", categoryarray=~hum.name,categoryorder="array"))
p4
head(gen1.hsv.filtered)
gen1.hsv.filtered<-gen1.hsv[((gen1.hsv$normalized.area<=(gen1.hsv$mean.norm.sd+gen1.hsv$mean.norm.area)) & (gen1.hsv$normalized.area>=(gen1.hsv$mean.norm.area-gen1.hsv$mean.norm.sd))),]
gen1.hsv.ag.filtered<-aggregate(gen1.hsv.filtered,by=list(gen1.hsv.filtered$genotype),FUN = mean)
genotype.info$genotype<-tolower(genotype.info$genotype)
gen1.hsv.filtered<-merge(gen1.hsv.filtered,genotype.info,by="genotype",all.x=TRUE)
gen1.hsv.ag.filtered<-merge(gen1.hsv.ag.filtered,genotype.info,by="genotype",all.x=TRUE)
head(gen1.hsv.filtered)
mean.norm.area<-subset(gen1.hsv.ag, select=c(plantbarcode,normalized.area))
colnames(mean.norm.area)<-c("plantbarcode","mean.norm.area")
gen1.hsv.sd<-aggregate(gen1.hsv,by=list(gen1.hsv$plantbarcode),FUN = sd)
mean.norm.sd<-subset(gen1.hsv.sd,select=c(Group.1,normalized.area))
colnames(mean.norm.sd)<-c("plantbarcode","mean.norm.sd")
gen1.hsv<-merge(gen1.hsv,mean.norm.area,by="plantbarcode",all.x=TRUE)
gen1.hsv<-merge(gen1.hsv,mean.norm.sd,by="plantbarcode",all.x=TRUE)
gen1.hsv.filtered<-gen1.hsv[((gen1.hsv$normalized.area<=(gen1.hsv$mean.norm.sd+gen1.hsv$mean.norm.area)) & (gen1.hsv$normalized.area>=(gen1.hsv$mean.norm.area-gen1.hsv$mean.norm.sd))),]
gen1.hsv.ag.filtered<-aggregate(gen1.hsv.filtered,by=list(gen1.hsv.filtered$genotype),FUN = mean)
genotype.info$genotype<-tolower(genotype.info$genotype)
gen1.hsv.filtered<-merge(gen1.hsv.filtered,genotype.info,by="genotype",all.x=TRUE)
gen1.hsv.ag.filtered<-merge(gen1.hsv.ag.filtered,genotype.info,by="genotype",all.x=TRUE)
head(gen1.hsv.filtered)
gen1.3.21<-read.csv(file="gen1.3-21-17.txt", sep="\t", header=TRUE, stringsAsFactors=FALSE)
gen1.4.2<-read.csv(file="gen1.4-2-17.txt", sep="\t", header=TRUE, stringsAsFactors=FALSE)
gen1.4.4<-read.csv(file="gen1.4-4-17.txt", sep="\t", header=TRUE, stringsAsFactors=FALSE)
gen1.4.5<-read.csv(file="gen1.4-5-17.txt", sep="\t", header=TRUE, stringsAsFactors=FALSE)
gen1<-rbind(gen1.3.21,gen1.4.2)
gen1<-rbind(gen1,gen1.4.4)
gen1<-rbind(gen1,gen1.4.5)
gen1<-subset(gen1,select=c(plantbarcode,area,marker_area,channel_name,values))
gen1$normalized.area<-NA
gen1$normalized.area<-gen1$area/gen1$marker_area
genotype1<-colsplit(gen1$plantbarcode,"\\.", names=c("genotype","generation"))
gen1<-cbind(gen1,genotype1)
replicate<-colsplit(gen1$generation,"-", names=c("generation","replicate"))
gen1$replicate<-paste(replicate$replicate,replicate$NA., sep="")
gen1$generation<-replicate$generation
gen1.hue<-gen1[(gen1$channel_name=="hue"),]
gen1.hue<-subset(gen1.hue, select=-c(channel_name))
colnames(gen1.hue)<-c("plantbarcode","area","marker_area","hue","normalized.area","genotype","generation","replicate")
hnames <- paste("hue", 1:256, sep = "")
hue<-colsplit(gen1.hue$hue,",",names=hnames)
gen1.hue<-cbind(gen1.hue,hue)
gen1.hue<-subset(gen1.hue, select=-c(hue))
gen1.hue$observation <- 1:nrow(gen1.hue)
gen1.sat<-gen1[(gen1$channel_name=="saturation"),]
gen1.sat<-subset(gen1.sat, select=-c(channel_name))
colnames(gen1.sat)<-c("plantbarcode","area","marker_area","saturation","normalized.area","genotype","generation","replicate")
snames <- paste("sat", 1:256, sep = "")
sat<-colsplit(gen1.sat$saturation,",",names=snames)
gen1.sat<-cbind(gen1.sat,sat)
gen1.sat<-subset(gen1.sat, select=-c(saturation))
gen1.sat$observation <- 1:nrow(gen1.sat)
gen1.val<-gen1[(gen1$channel_name=="value"),]
gen1.val<-subset(gen1.val, select=-c(channel_name))
colnames(gen1.val)<-c("plantbarcode","area","marker_area","value","normalized.area","genotype","generation","replicate")
vnames <- paste("val", 1:256, sep = "")
val<-colsplit(gen1.val$value,",",names=vnames)
gen1.val<-cbind(gen1.val,val)
gen1.val<-subset(gen1.val, select=-c(value))
gen1.val$observation <- 1:nrow(gen1.val)
gen1.hs<-merge(gen1.hue,gen1.sat,by=c("observation","plantbarcode","genotype","generation","replicate","area","marker_area","normalized.area"))
gen1.hsv<-merge(gen1.hs,gen1.val,by=c("observation","plantbarcode","genotype","generation","replicate","area","marker_area","normalized.area"))
gen1.hsv.ag<-aggregate(gen1.hsv,by=list(gen1.hsv$plantbarcode,gen1.hsv$genotype, gen1.hsv$replicate), FUN =mean)
gen1.hsv.ag$plantbarcode<-gen1.hsv.ag$Group.1
gen1.hsv.ag$genotype<-gen1.hsv.ag$Group.2
gen1.hsv.ag$replicate<-gen1.hsv.ag$Group.3
gen1.hsv.ag<-subset(gen1.hsv.ag,select=-c(observation,Group.1, Group.2, Group.3))
mean.norm.area<-subset(gen1.hsv.ag, select=c(plantbarcode,normalized.area))
colnames(mean.norm.area)<-c("plantbarcode","mean.norm.area")
gen1.hsv.sd<-aggregate(gen1.hsv,by=list(gen1.hsv$plantbarcode),FUN = sd)
mean.norm.sd<-subset(gen1.hsv.sd,select=c(Group.1,normalized.area))
colnames(mean.norm.sd)<-c("plantbarcode","mean.norm.sd")
gen1.hsv<-merge(gen1.hsv,mean.norm.area,by="plantbarcode",all.x=TRUE)
gen1.hsv<-merge(gen1.hsv,mean.norm.sd,by="plantbarcode",all.x=TRUE)
gen1.hsv.filtered<-gen1.hsv[((gen1.hsv$normalized.area<=((gen1.hsv$mean.norm.sd*2)+gen1.hsv$mean.norm.area)) & (gen1.hsv$normalized.area>=(gen1.hsv$mean.norm.area-(gen1.hsv$mean.norm.sd*2)))),]
gen1.hsv.ag.filtered<-aggregate(gen1.hsv.filtered,by=list(gen1.hsv.filtered$genotype),FUN = mean)
genotype.info$genotype<-tolower(genotype.info$genotype)
gen1.hsv.filtered<-merge(gen1.hsv.filtered,genotype.info,by="genotype",all.x=TRUE)
gen1.hsv.ag.filtered<-merge(gen1.hsv.ag.filtered,genotype.info,by="genotype",all.x=TRUE)
head(gen1.hsv.filtered)
p4 <- plot_ly(gen1.hsv.filtered, x = ~hum.name, y = ~normalized.area, type = "box", boxpoints="all", color=~as.factor(country),
colors = c("blue","magenta","navy","palevioletred","darkgreen","red","chartreuse","mediumspringgreen","brown","darkorange","yellow","darkorchid","cyan")) %>%
layout(title = "Chenopodium quinoa Seed Size",
margin = list(b = 160),
yaxis = list(title = "Mean Normalized Seed Size"),
xaxis = list(title = "Genotype", categoryarray=~hum.name,categoryorder="array"))
p4
gen1.hsv.filtered<-gen1.hsv.filtered[order(gen1.hsv.filtered$mean.norm.area),]
p4 <- plot_ly(gen1.hsv.filtered, x = ~hum.name, y = ~normalized.area, type = "box", boxpoints="all", color=~as.factor(country),
colors = c("blue","magenta","navy","palevioletred","darkgreen","red","chartreuse","mediumspringgreen","brown","darkorange","yellow","darkorchid","cyan")) %>%
layout(title = "Chenopodium quinoa Seed Size",
margin = list(b = 160),
yaxis = list(title = "Mean Normalized Seed Size"),
xaxis = list(title = "Genotype", categoryarray=~hum.name,categoryorder="array"))
p4
p4 <- plot_ly(gen1.hsv.filtered, x = ~plantbarcode, y = ~normalized.area, type = "box", boxpoints="all", color=~as.factor(country),
colors = c("blue","magenta","navy","palevioletred","darkgreen","red","chartreuse","mediumspringgreen","brown","darkorange","yellow","darkorchid","cyan")) %>%
layout(title = "Chenopodium quinoa Seed Size",
margin = list(b = 160),
yaxis = list(title = "Mean Normalized Seed Size"),
xaxis = list(title = "Genotype", categoryarray=~hum.name,categoryorder="array"))
p4
gen1.hsv.filtered<-gen1.hsv.filtered[order(gen1.hsv.filtered$mean.norm.area),]
p4 <- plot_ly(gen1.hsv.filtered, x = ~plantbarcode, y = ~normalized.area, type = "box", boxpoints="all", color=~as.factor(country),
colors = c("blue","magenta","navy","palevioletred","darkgreen","red","chartreuse","mediumspringgreen","brown","darkorange","yellow","darkorchid","cyan")) %>%
layout(title = "Chenopodium quinoa Seed Size",
margin = list(b = 160),
yaxis = list(title = "Mean Normalized Seed Size"),
xaxis = list(title = "Genotype", categoryarray=~hum.name,categoryorder="array"))
p4
p4 <- plot_ly(gen1.hsv.filtered, x = ~plantbarcode, y = ~normalized.area, type = "box", boxpoints="all", color=~as.factor(country),
colors = c("blue","magenta","navy","palevioletred","darkgreen","red","chartreuse","mediumspringgreen","brown","darkorange","yellow","darkorchid","cyan")) %>%
layout(title = "Chenopodium quinoa Seed Size",
margin = list(b = 160),
yaxis = list(title = "Mean Normalized Seed Size"),
xaxis = list(title = "Genotype", categoryarray=~plantbarcode,categoryorder="array"))
p4
runApp('~/Documents/github/quinoa-shiny-2017/quinoa-trait/quinoa_app.R')
p4 <- plot_ly(gen1.hsv.filtered, x = ~plantbarcode, y = ~normalized.area, type = "box", boxpoints="all", color=~as.factor(country),
colors = c("blue","navy","darkgreen","chartreuse","brown","darkorchid","cyan")) %>%
layout(title = "Chenopodium quinoa Seed Size",
margin = list(b = 160),
yaxis = list(title = "Mean Normalized Seed Size"),
xaxis = list(title = "Genotype", categoryarray=~plantbarcode,categoryorder="array"))
p4
runApp('~/Documents/github/quinoa-shiny-2017/quinoa-trait/quinoa_app.R')
colors = c("blue","navy","darkgreen","chartreuse","mediumspringgreen","darkorchid","cyan")) %>%
layout(title = "Chenopodium quinoa Seed Size",
margin = list(b = 160),
yaxis = list(title = "Mean Normalized Seed Size"),
xaxis = list(title = "Genotype", categoryarray=~plantbarcode,categoryorder="array"))
p4 <- plot_ly(gen1.hsv.filtered, x = ~plantbarcode, y = ~normalized.area, type = "box", boxpoints="all", color=~as.factor(country),
colors = c("blue","navy","darkgreen","chartreuse","mediumspringgreen","darkorchid","cyan")) %>%
layout(title = "Chenopodium quinoa Seed Size",
margin = list(b = 160),
yaxis = list(title = "Mean Normalized Seed Size"),
xaxis = list(title = "Genotype", categoryarray=~plantbarcode,categoryorder="array"))
p4
runApp('~/Documents/github/quinoa-shiny-2017/quinoa-trait/quinoa_app.R')
p4 <- plot_ly(gen1.hsv.filtered, x = ~plantbarcode, y = ~normalized.area, type = "box", boxpoints="outlier", color=~as.factor(country),
colors = c("blue","navy","darkgreen","chartreuse","mediumspringgreen","darkorchid","cyan")) %>%
layout(title = "Chenopodium quinoa Seed Size",
margin = list(b = 160),
yaxis = list(title = "Mean Normalized Seed Size"),
xaxis = list(title = "Genotype", categoryarray=~plantbarcode,categoryorder="array"))
p4
p4 <- plot_ly(gen1.hsv.filtered, x = ~hum.name, y = ~normalized.area, type = "box", boxpoints="outlier", color=~as.factor(country),
colors = c("blue","navy","darkgreen","chartreuse","mediumspringgreen","darkorchid","cyan")) %>%
layout(title = "Chenopodium quinoa Seed Size",
margin = list(b = 160),
yaxis = list(title = "Mean Normalized Seed Size"),
xaxis = list(title = "Genotype", categoryarray=~plantbarcode,categoryorder="array"))
p4
p4 <- plot_ly(gen1.hsv.filtered, x = ~plantbarcode, y = ~normalized.area, type = "box", boxpoints="outlier", color=~as.factor(country),
colors = c("blue","navy","darkgreen","chartreuse","mediumspringgreen","darkorchid","cyan")) %>%
layout(title = "Chenopodium quinoa Seed Size",
margin = list(b = 160),
yaxis = list(title = "Mean Normalized Seed Size"),
xaxis = list(title = "Genotype", categoryarray=~plantbarcode,categoryorder="array"))
p4
gen1.hsv.filtered<-gen1.hsv[((gen1.hsv$normalized.area<=((gen1.hsv$mean.norm.sd*2)+gen1.hsv$mean.norm.area)) & (gen1.hsv$normalized.area>=(gen1.hsv$mean.norm.area-(gen1.hsv$mean.norm.sd*2)))),]
gen1.hsv.ag.filtered<-aggregate(gen1.hsv.filtered,by=list(gen1.hsv.filtered$genotype),FUN = mean)
genotype.info$genotype<-tolower(genotype.info$genotype)
gen1.hsv.filtered<-merge(gen1.hsv.filtered,genotype.info,by="genotype",all.x=TRUE)
gen1.hsv.filtered$hum.rep<-paste(gen1.hsv.filtered$hum.name,gen1.hsv.filtered$replicate,sep="-")
gen1.hsv.ag.filtered<-merge(gen1.hsv.ag.filtered,genotype.info,by="genotype",all.x=TRUE)
gen1.hsv.filtered<-gen1.hsv.filtered[order(gen1.hsv.filtered$mean.norm.area),]
p4 <- plot_ly(gen1.hsv.filtered, x = ~plantbarcode, y = ~normalized.area, type = "box", boxpoints="outlier", color=~as.factor(country),
colors = c("blue","navy","darkgreen","chartreuse","mediumspringgreen","darkorchid","cyan")) %>%
layout(title = "Chenopodium quinoa Seed Size",
margin = list(b = 160),
yaxis = list(title = "Mean Normalized Seed Size"),
xaxis = list(title = "Genotype", categoryarray=~plantbarcode,categoryorder="array"))
head(gen1.hsv.filtered)
p4 <- plot_ly(gen1.hsv.filtered, x = ~hum.rep, y = ~normalized.area, type = "box", boxpoints="outlier", color=~as.factor(country),
colors = c("blue","navy","darkgreen","chartreuse","mediumspringgreen","darkorchid","cyan")) %>%
layout(title = "Chenopodium quinoa Seed Size",
margin = list(b = 160),
yaxis = list(title = "Mean Normalized Seed Size"),
xaxis = list(title = "Genotype", categoryarray=~hum.rep,categoryorder="array"))
p4
saveRDS(gen1.hsv.filtered,"gen1.filtered_seed_biomass_hsv.rds")
gen1.hsv.ag.filtered<-merge(gen1.hsv.ag.filtered,genotype.info,by="genotype",all.x=TRUE)
gen1.hsv.filtered<-gen1.hsv.filtered[order(gen1.hsv.filtered$mean.norm.area),]
pca_format=function(data){
data_sub=subset(data, select=-c(plantbarcode,genotype,generation,replicate,area,marker_area,normalized.area,hum.name,hum.rep))
return(data_sub)
}
pca_nonzero=function(data_sub){
col_sum=colSums(data_sub)
channel_data=data_sub[,col_sum!=0]
return(channel_data)
}
go_pca=function(channel_data){
channel_pca=prcomp(channel_data,center=TRUE, scale=TRUE)
}
hsv2=pca_format(gen1.hsv.filtered)
pca.gen1=pca_nonzero(hsv2)
gen1.pca=go_pca(pca.gen1)
summary(gen1.pca)
pov1 <- gen1.pca$sdev^2/sum(gen1.pca$sdev^2)
head(hsv2)
pca_format=function(data){
data_sub=subset(data, select=-c(observation,plantbarcode,genotype,generation,replicate,area,marker_area,normalized.area,hum.name,hum.rep, country,mean.norm.area, mean.norm.sd))
return(data_sub)
}
pca_nonzero=function(data_sub){
col_sum=colSums(data_sub)
channel_data=data_sub[,col_sum!=0]
return(channel_data)
}
go_pca=function(channel_data){
channel_pca=prcomp(channel_data,center=TRUE, scale=TRUE)
}
hsv2=pca_format(gen1.hsv.filtered)
pca.gen1=pca_nonzero(hsv2)
gen1.pca=go_pca(pca.gen1)
summary(gen1.pca)
pov1 <- gen1.pca$sdev^2/sum(gen1.pca$sdev^2)
gen1_scores<-as.data.frame(gen1.pca$x)
gen1_scores$plantbarcode=gen1.hsv.ag$plantbarcode
gen1_scores$genotype=gen1.hsv.ag$genotype
gen1_scores$generation=gen1.hsv.ag$generation
gen1_scores$norm_area=gen1.hsv.ag$norm_area
gen1_scores$replicate=gen1.hsv.ag$replicate
gen1_scores$hum.name=gen1.hsv.ag$hum.name
gen1_scores$hum.rep=gen1.hsv.ag$hum.rep
gen1_scores$country=gen1.hsv.ag$country
gen1_scores$mean.norm.area=gen1.hsv.ag$mean.norm.area
gen1_scores$mean.norm.sd=gen1.hsv.ag$mean.norm.sd
gen1_scores<-as.data.frame(gen1.pca$x)
gen1_scores$plantbarcode=gen1.hsv.filtered$plantbarcode
gen1_scores$genotype=gen1.hsv.filtered$genotype
gen1_scores$generation=gen1.hsv.filtered$generation
gen1_scores$norm_area=gen1.hsv.filtered$norm_area
gen1_scores$replicate=gen1.hsv.filtered$replicate
gen1_scores$hum.name=gen1.hsv.filtered$hum.name
gen1_scores$hum.rep=gen1.hsv.filtered$hum.rep
gen1_scores$country=gen1.hsv.filtered$country
gen1_scores$mean.norm.area=gen1.hsv.filtered$mean.norm.area
gen1_scores$mean.norm.sd=gen1.hsv.filtered$mean.norm.sd
saveRDS(gen1_scores,"gen1.pca.color.scores.rds")
p3<-plot_ly()%>%
add_markers(data=gen1_scores, x = ~PC1, y = ~PC2, z = ~PC3, color=~as.factor(country),
colors = c("blue","magenta","navy","palevioletred","darkgreen","red","chartreuse","mediumspringgreen","brown","darkorange","yellow","darkorchid","cyan"),
marker = list(symbol = 'circle'), showlegend=TRUE,
text = ~paste('Genotype:', hum.rep,'<br>Norm. Mean Area',mean.norm.area ,'<br>Country:', country))%>%
layout(title = 'Panicle Phenotype Principal Components',
scene = list(xaxis = list(title = 'PC1'),
yaxis = list(title = 'PC2'),
zaxis = list(title = 'PC3'),
height = 800, units="px"))
p3
p3<-plot_ly()%>%
add_markers(data=gen1_scores, x = ~PC1, y = ~PC2, z = ~PC3, color=~as.factor(country),
colors = c("blue","navy","darkgreen","chartreuse","mediumspringgreen","darkorchid","cyan"),
marker = list(symbol = 'circle'), showlegend=TRUE,
text = ~paste('Genotype:', hum.rep,'<br>Norm. Mean Area',mean.norm.area ,'<br>Country:', country))%>%
layout(title = 'Panicle Phenotype Principal Components',
scene = list(xaxis = list(title = 'PC1'),
yaxis = list(title = 'PC2'),
zaxis = list(title = 'PC3'),
height = 800, units="px"))
p3
runApp('~/Documents/github/quinoa-shiny-2017/quinoa-trait/quinoa_app.R')
runApp('~/Documents/github/quinoa-shiny-2017/quinoa-trait/quinoa_app.R')
head(gen1.3.21)
runApp('~/Documents/github/quinoa-shiny-2017/quinoa-trait/quinoa_app.R')
View(gen0.hsv.filtered)
View(pca.gen0)
runApp('~/Documents/github/quinoa-shiny-2017/quinoa-trait/quinoa_app.R')
